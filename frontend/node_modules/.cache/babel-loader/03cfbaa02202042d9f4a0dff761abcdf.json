{"ast":null,"code":"var _jsxFileName = \"/home/alex/Music/task-management-app/frontend/src/tasks/pages/UpdateTask.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_TASKS = [{\n  id: 't1',\n  title: 'new bug 1',\n  description: 'new bug 1 new bug 1',\n  creator: 'u1'\n}, {\n  id: 't2',\n  title: 'new bug 2',\n  description: 'new bug 2 new bug 2',\n  creator: 'u2'\n}];\n\nconst UpdateTask = () => {\n  _s();\n\n  const taskId = useParams().taskId;\n  const identifiedTask = DUMMY_TASKS.find(t => t.id === taskId);\n\n  if (!identifiedTask) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"task not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: () => {},\n      value: identifiedTask.title,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(10)],\n      errorText: \"Please enter a valid description (min. 10 characters).\",\n      onInput: () => {},\n      value: identifiedTask.description,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: true,\n      children: \"Update task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateTask, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateTask;\nexport default UpdateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTask\");","map":{"version":3,"sources":["/home/alex/Music/task-management-app/frontend/src/tasks/pages/UpdateTask.js"],"names":["React","useParams","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","DUMMY_TASKS","id","title","description","creator","UpdateTask","taskId","identifiedTask","find","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,SACIC,iBADJ,EAEIC,mBAFJ,QAGO,8BAHP;;AAKA,MAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,WAAW,EAAE,qBAHjB;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADgB,EAOhB;AACIH,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,WAFX;AAGIC,EAAAA,WAAW,EAAE,qBAHjB;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPgB,CAApB;;AAeA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGX,SAAS,GAAGW,MAA3B;AAEA,QAAMC,cAAc,GAAGP,WAAW,CAACQ,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACR,EAAF,KAASK,MAA/B,CAAvB;;AAEA,MAAI,CAACC,cAAL,EAAqB;AACjB,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,EAAE,EAAC,OADP;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAC,OAJV;AAKI,MAAA,UAAU,EAAE,CAACT,iBAAiB,EAAlB,CALhB;AAMI,MAAA,SAAS,EAAC,6BANd;AAOI,MAAA,OAAO,EAAE,MAAM,CAAE,CAPrB;AAQI,MAAA,KAAK,EAAES,cAAc,CAACL,KAR1B;AASI,MAAA,KAAK,EAAE;AATX;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,KAAD;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,OAAO,EAAC,UAFZ;AAGI,MAAA,KAAK,EAAC,aAHV;AAII,MAAA,UAAU,EAAE,CAACH,mBAAmB,CAAC,EAAD,CAApB,CAJhB;AAKI,MAAA,SAAS,EAAC,wDALd;AAMI,MAAA,OAAO,EAAE,MAAM,CAAE,CANrB;AAOI,MAAA,KAAK,EAAEQ,cAAc,CAACJ,WAP1B;AAQI,MAAA,KAAK,EAAE;AARX;AAAA;AAAA;AAAA;AAAA,YAZJ,eAsBI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAzCD;;GAAME,U;UACaV,S;;;KADbU,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n    VALIDATOR_REQUIRE,\n    VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\n\nconst DUMMY_TASKS = [\n    {\n        id: 't1',\n        title: 'new bug 1',\n        description: 'new bug 1 new bug 1',\n        creator: 'u1'\n    },\n    {\n        id: 't2',\n        title: 'new bug 2',\n        description: 'new bug 2 new bug 2',\n        creator: 'u2'\n    },\n];\n\nconst UpdateTask = () => {\n    const taskId = useParams().taskId;\n\n    const identifiedTask = DUMMY_TASKS.find(t => t.id === taskId);\n\n    if (!identifiedTask) {\n        return (\n            <div className=\"center\">\n                <h2>task not found!</h2>\n            </div>\n        );\n    }\n\n    return (\n        <form>\n            <Input\n                id=\"title\"\n                element=\"input\"\n                type=\"text\"\n                label=\"Title\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a valid title.\"\n                onInput={() => {}}\n                value={identifiedTask.title}\n                valid={true}\n            />\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[VALIDATOR_MINLENGTH(10)]}\n                errorText=\"Please enter a valid description (min. 10 characters).\"\n                onInput={() => {}}\n                value={identifiedTask.description}\n                valid={true}\n            />\n            <Button type=\"submit\" disabled={true}>\n                Update task\n            </Button>\n        </form>\n    );\n};\n\nexport default UpdateTask;\n"]},"metadata":{},"sourceType":"module"}