{"ast":null,"code":"var _jsxFileName = \"/home/alex/Music/task-management-app/frontend/src/users/pages/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport './Auth.css';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n        console.log(responseData);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    auth.login();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmitHandler,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"name\",\n        type: \"text\",\n        label: \"Your Name\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter a name.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"email\",\n        type: \"email\",\n        label: \"E-Mail\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password, at least 5 characters.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"jg9dbpLRYxHA9NoPi6/dxC1RrYQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/alex/Music/task-management-app/frontend/src/users/pages/Auth.js"],"names":["React","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","AuthContext","Auth","auth","useContext","isLoginMode","setIsLoginMode","useState","formState","inputHandler","email","value","isValid","password","switchModeHandler","setFormData","inputs","name","undefined","prevMode","authSubmitHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","console","log","err","login","VALIDATOR_REQUIRE"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport {\n    VALIDATOR_EMAIL,\n    VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport {useForm} from '../../shared/hooks/form-hook';\nimport './Auth.css';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true);\n\n    const [formState, inputHandler] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined\n                },\n                formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            setFormData(\n                {\n                    ...formState.inputs,\n                    name: {\n                        value: '',\n                        isValid: false\n                    }\n                },\n                false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n    const authSubmitHandler = async event => {\n        event.preventDefault();\n\n        if (isLoginMode) {\n        } else {\n            try {\n                const response = await fetch('http://localhost:5000/api/users/signup', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        name: formState.inputs.name.value,\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    })\n                });\n\n                const responseData = await response.json();\n                console.log(responseData);\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        auth.login();\n    };\n\n    return (\n        <div className=\"authentication\">\n            <h2>Login Required</h2>\n            <hr/>\n            <form onSubmit={authSubmitHandler}>\n                {!isLoginMode && (\n                    <Input\n                        element=\"input\"\n                        id=\"name\"\n                        type=\"text\"\n                        label=\"Your Name\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a name.\"\n                        onInput={inputHandler}\n                    />\n                )}\n                <Input\n                    element=\"input\"\n                    id=\"email\"\n                    type=\"email\"\n                    label=\"E-Mail\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter a valid email address.\"\n                    onInput={inputHandler}\n                />\n                <Input\n                    element=\"input\"\n                    id=\"password\"\n                    type=\"password\"\n                    label=\"Password\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid password, at least 5 characters.\"\n                    onInput={inputHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                </Button>\n            </form>\n            <Button inverse onClick={switchModeHandler}>\n                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n            </Button>\n        </div>\n    );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}